<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:spring="http://www.springframework.org/schema/beans" 
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
      xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
      version="EE-3.7.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<batch:job name="fromSalesforceBatch" max-failed-records="-1">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>

			<batch:step name="getAccountInDatabaseStep" >
				<enricher
					source="#[payload.isEmpty() ? null : payload[0][LastModifiedDate]]"
					target="#[payload.LastModifiedDateFromDB]" doc:name="store 'LastModifiedDateFromDB' in record var">
                    <db:select config-ref="GenericDatabaseConnector" doc:name="Query account">
                        <db:parameterized-query><![CDATA[SELECT LastModifiedDate FROM Account WHERE Name = #[payload['Name']]]]></db:parameterized-query>


                    </db:select>
				</enricher>
			</batch:step>

			<batch:step name="updateAccountInDatabaseStep" accept-expression="(payload.LastModifiedDateFromDB != null) &amp;&amp; org.mule.templates.date.DateUtils.ISOStringDateToDateTime(payload['LastModifiedDate']).isAfter(org.mule.templates.date.DateUtils.dateToDateTime(payload.LastModifiedDateFromDB))">

				<batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Prepare Accounts for update">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ($ - 'LastModifiedDate'
			   - 'LastModifiedDateFromDB')]]></dw:set-payload>
                    </dw:transform-message>
					<db:update config-ref="GenericDatabaseConnector" bulkMode="true"
						doc:name="Update accounts">
                        <db:parameterized-query><![CDATA[UPDATE Account SET
AccountNumber = #[payload['AccountNumber']], 
Description = #[payload['Description']],  
NumberOfEmployees = #[payload['NumberOfEmployees']],
Type = #[payload['Type']],	
LastModifiedDate = CURRENT_TIMESTAMP
WHERE Name = #[payload['Name']]]]></db:parameterized-query>




					</db:update>
					<logger message="Update Database response: #[payload]"
						level="INFO" doc:name="Log response" />
				</batch:commit>
			</batch:step>

			<batch:step name="insertAccountsInDatabaseStep" accept-expression="payload.LastModifiedDateFromDB == null">

				<batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Prepare Accounts for insert">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ($ - 'LastModifiedDate'
			   - 'LastModifiedDateFromDB')]]></dw:set-payload>
                    </dw:transform-message>
					<db:insert config-ref="GenericDatabaseConnector" bulkMode="true"
						doc:name="Insert accounts">
                        <db:parameterized-query><![CDATA[INSERT INTO Account (
	AccountNumber,
	Description,
	Name,
	NumberOfEmployees,
	Type,
	SalesforceId,
	LastModifiedById,
	LastModifiedDate
) VALUES (
	#[payload['AccountNumber']],
	#[payload['Description']],
	#[payload['Name']],
	#[payload['NumberOfEmployees']],
	#[payload['Type']],
	#[payload['Id']],
	CURRENT_USER,
	CURRENT_TIMESTAMP
)]]></db:parameterized-query>

					</db:insert>
					<logger message="Insert Database response: #[payload]"	level="INFO" doc:name="Log response" />
				</batch:commit>
			</batch:step>
		</batch:process-records>

        <batch:on-complete>
            <expression-component doc:name="Release lock"><![CDATA[#[app.registry['PollSynchronizer'].unlock()]]]></expression-component>
        </batch:on-complete>
	</batch:job>
	
	<batch:job name="fromDatabaseBatch" max-failed-records="-1">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>
			<batch:step name="getAccountInSalesforceStep" >
				<enricher   doc:name="store 'LastModifiedDateFromSFDC' and 'Id' in payload">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id, LastModifiedDate FROM Account WHERE (Name = '#[payload['Name']]')" doc:name="Query account"/>
                    <enrich source="#[payload == null ? null : payload.LastModifiedDate]" target="#[payload.LastModifiedDateFromSFDC]"/>
                    <enrich source="#[payload == null ? null : payload.Id]" target="#[payload.Id]"/>
				</enricher>
			</batch:step>

			<batch:step name="upsertAccountInSalesforceStep" accept-expression="payload.LastModifiedDateFromSFDC == null ? true : org.mule.templates.date.DateUtils.dateToDateTime(payload['LastModifiedDate']).isAfter(org.mule.templates.date.DateUtils.ISOStringDateToDateTime(payload.LastModifiedDateFromSFDC))">

				<batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Prepare Accounts for upsert">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ($ - 'LastModifiedDate'
			   - 'LastModifiedDateFromSFDC')]]></dw:set-payload>
                    </dw:transform-message>
					<sfdc:upsert config-ref="Salesforce"
						externalIdFieldName="Id" type="Account" doc:name="Upsert account">
						<sfdc:objects ref="#[payload]" />
					</sfdc:upsert>
					<logger message="Upsert Salesforce A response: #[payload]"
						level="ERROR" doc:name="Log response" />
				</batch:commit>
			</batch:step>

		</batch:process-records>
        <batch:on-complete>
            <expression-component doc:name="Release lock"><![CDATA[#[app.registry['PollSynchronizer'].unlock()]]]></expression-component>
        </batch:on-complete>
	</batch:job>

</mule>